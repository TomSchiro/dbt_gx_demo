
  create or replace   view BRONZE.audit.v_stg_customer_info
  
   as (
    








WITH staging AS (
-- Generated by dbtvault.

    

WITH source_data AS (

    SELECT

    C_CUSTOMER_SK,
    C_CUSTOMER_ID,
    C_SALUTATION,
    C_FIRST_NAME,
    C_LAST_NAME,
    C_BIRTH_DAY,
    C_BIRTH_YEAR,
    C_EMAIL_ADDRESS,
    C_LOGIN,
    CA_ADDRESS_ID,
    CA_STREET_NUMBER,
    CA_STREET_TYPE,
    CA_SUITE_NUMBER,
    CA_CITY,
    CA_COUNTY,
    CA_STATE,
    CA_ZIP,
    CA_COUNTRY,
    CA_GMT_OFFSET,
    CA_LOCATION_TYPE,
    CD_GENDER,
    CD_MARITAL_STATUS,
    CD_EDUCATION_STATUS,
    CD_PURCHASE_ESTIMATE,
    CD_CREDIT_RATING,
    CD_DEP_COUNT,
    LOAD_DATE_TIMESTAMP

    FROM BRONZE.raw.raw_customer_info
),

derived_columns AS (

    SELECT

    C_CUSTOMER_SK,
    C_CUSTOMER_ID,
    C_SALUTATION,
    C_FIRST_NAME,
    C_LAST_NAME,
    C_BIRTH_DAY,
    C_BIRTH_YEAR,
    C_EMAIL_ADDRESS,
    C_LOGIN,
    CA_ADDRESS_ID,
    CA_STREET_NUMBER,
    CA_STREET_TYPE,
    CA_SUITE_NUMBER,
    CA_CITY,
    CA_COUNTY,
    CA_STATE,
    CA_ZIP,
    CA_COUNTRY,
    CA_GMT_OFFSET,
    CA_LOCATION_TYPE,
    CD_GENDER,
    CD_MARITAL_STATUS,
    CD_EDUCATION_STATUS,
    CD_PURCHASE_ESTIMATE,
    CD_CREDIT_RATING,
    CD_DEP_COUNT,
    LOAD_DATE_TIMESTAMP,
    C_CUSTOMER_SK AS CUSTOMERKEY,
    CA_ADDRESS_ID AS ADDRESSKEY,
    'CUSTOMER' AS ADDRESS_TYPE,
    'TPCDS-CUSTOMER' AS RECORD_SOURCE

    FROM source_data
),

hashed_columns AS (

    SELECT

    C_CUSTOMER_SK,
    C_CUSTOMER_ID,
    C_SALUTATION,
    C_FIRST_NAME,
    C_LAST_NAME,
    C_BIRTH_DAY,
    C_BIRTH_YEAR,
    C_EMAIL_ADDRESS,
    C_LOGIN,
    CA_ADDRESS_ID,
    CA_STREET_NUMBER,
    CA_STREET_TYPE,
    CA_SUITE_NUMBER,
    CA_CITY,
    CA_COUNTY,
    CA_STATE,
    CA_ZIP,
    CA_COUNTRY,
    CA_GMT_OFFSET,
    CA_LOCATION_TYPE,
    CD_GENDER,
    CD_MARITAL_STATUS,
    CD_EDUCATION_STATUS,
    CD_PURCHASE_ESTIMATE,
    CD_CREDIT_RATING,
    CD_DEP_COUNT,
    LOAD_DATE_TIMESTAMP,
    CUSTOMERKEY,
    ADDRESSKEY,
    ADDRESS_TYPE,
    RECORD_SOURCE,

    CAST(MD5_BINARY(NULLIF(UPPER(TRIM(CAST(CUSTOMERKEY AS VARCHAR))), '')) AS BINARY(16)) AS CUSTOMER_PK,

    CAST(MD5_BINARY(NULLIF(UPPER(TRIM(CAST(ADDRESSKEY AS VARCHAR))), '')) AS BINARY(16)) AS ADDRESS_PK,

    CAST(MD5_BINARY(NULLIF(CONCAT(
        IFNULL(NULLIF(UPPER(TRIM(CAST(CUSTOMERKEY AS VARCHAR))), ''), '^^'), '||',
        IFNULL(NULLIF(UPPER(TRIM(CAST(ADDRESSKEY AS VARCHAR))), ''), '^^')
    ), '^^||^^')) AS BINARY(16)) AS LINK_CUSTOMER_ADDRESS_PK,

    CAST(MD5_BINARY(CONCAT(
        IFNULL(NULLIF(UPPER(TRIM(CAST(ADDRESSKEY AS VARCHAR))), ''), '^^'), '||',
        IFNULL(NULLIF(UPPER(TRIM(CAST(CA_CITY AS VARCHAR))), ''), '^^'), '||',
        IFNULL(NULLIF(UPPER(TRIM(CAST(CA_COUNTRY AS VARCHAR))), ''), '^^'), '||',
        IFNULL(NULLIF(UPPER(TRIM(CAST(CA_COUNTY AS VARCHAR))), ''), '^^'), '||',
        IFNULL(NULLIF(UPPER(TRIM(CAST(CA_STATE AS VARCHAR))), ''), '^^'), '||',
        IFNULL(NULLIF(UPPER(TRIM(CAST(CA_STREET_NUMBER AS VARCHAR))), ''), '^^'), '||',
        IFNULL(NULLIF(UPPER(TRIM(CAST(CA_STREET_TYPE AS VARCHAR))), ''), '^^'), '||',
        IFNULL(NULLIF(UPPER(TRIM(CAST(CA_SUITE_NUMBER AS VARCHAR))), ''), '^^'), '||',
        IFNULL(NULLIF(UPPER(TRIM(CAST(CUSTOMERKEY AS VARCHAR))), ''), '^^')
    )) AS BINARY(16)) AS CUSTOMER_ADDRESS_HASHDIFF

    FROM derived_columns
),

columns_to_select AS (

    SELECT

    C_CUSTOMER_SK,
    C_CUSTOMER_ID,
    C_SALUTATION,
    C_FIRST_NAME,
    C_LAST_NAME,
    C_BIRTH_DAY,
    C_BIRTH_YEAR,
    C_EMAIL_ADDRESS,
    C_LOGIN,
    CA_ADDRESS_ID,
    CA_STREET_NUMBER,
    CA_STREET_TYPE,
    CA_SUITE_NUMBER,
    CA_CITY,
    CA_COUNTY,
    CA_STATE,
    CA_ZIP,
    CA_COUNTRY,
    CA_GMT_OFFSET,
    CA_LOCATION_TYPE,
    CD_GENDER,
    CD_MARITAL_STATUS,
    CD_EDUCATION_STATUS,
    CD_PURCHASE_ESTIMATE,
    CD_CREDIT_RATING,
    CD_DEP_COUNT,
    LOAD_DATE_TIMESTAMP,
    CUSTOMERKEY,
    ADDRESSKEY,
    ADDRESS_TYPE,
    RECORD_SOURCE,
    CUSTOMER_PK,
    ADDRESS_PK,
    LINK_CUSTOMER_ADDRESS_PK,
    CUSTOMER_ADDRESS_HASHDIFF

    FROM hashed_columns
)

SELECT * FROM columns_to_select
)

SELECT *, 
       CURRENT_TIMESTAMP() AS LOAD_DATE,
       CURRENT_TIMESTAMP() AS EFFECTIVE_FROM      
FROM staging
  );

